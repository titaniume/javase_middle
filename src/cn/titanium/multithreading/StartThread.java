package cn.titanium.multithreading;

/**
 * 启动一个线程
 * @author Administrator
 *2017年10月18日下午9:17:36
 */
public class StartThread {
	public static void main(String[] args) {
		
		/*多线程即在同一时间，可以做多件事情。 
		创建多线程有3种方式，分别是继承线程类,实现Runnable接口,匿名类*/
		//1 : 线程概念
		/*首先要理解进程(Processor)和线程(Thread)的区别 
		进程：启动一个LOL.exe就叫一个进程。 接着又启动一个DOTA.exe，这叫两个进程。 
		线程：线程是在进程内部同时做的事情，比如在LOL里，有很多事情要同时做，比如"盖伦”
		 击杀“提莫”，同时“赏金猎人”又在击杀“盲僧”，这就是由多线程来实现的。 */
		
		//2 : 创建多线程-继承线程类
		/*使用多线程，就可以做到盖伦在攻击提莫的同时，赏金猎人也在攻击盲僧 
		设计一个类KillThread 继承Thread，并且重写run方法 
		启动线程办法： 实例化一个KillThread对象，并且调用其start方法 
		就可以观察到 赏金猎人攻击盲僧的同时，盖伦也在攻击提莫*/
		
		// 3 : 创建多线程-实现Runnable接口
		/*创建类Battle，实现Runnable接口
		启动的时候，首先创建一个Battle对象，然后再根据该battle对象创建一个线程对象，并启动*/
		
		//4 : 创建多线程-匿名类
		
		//5 : 创建多线程的三种方式
		/*把上诉3种方式再整理一下：

		1. 继承Thread类
		2. 实现Runnable接口
		3. 匿名类的方式

		注： 启动线程是start()方法，run()并不能启动一个新的线程*/
		
		//6 : 练习-同步查找文件内容 
/*		把 练习-查找文件内容 改为多线程查找文件内容
		原练习的思路是遍历所有文件，当遍历到文件时.java的时候，查找这个文件的内容，查找完毕之后，再遍历下一个文件

		现在通过多线程调整这个思路：
		遍历所有文件，当遍历到文件是.java的时候，创建一个线程去查找这个文件的内容，不必等待这个线程结束，继续遍历下一个文件*/
		
	}
}
