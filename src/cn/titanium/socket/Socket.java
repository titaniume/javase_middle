package cn.titanium.socket;

/**
 * 使用 Socket(套接字)进行不同的程序之间的通信
 * @author Administrator
 *2017年10月22日下午12:50:38
 */
public class Socket {
	public static void main(String[] args) {
		 //1 : 建立连接
		/*1. 服务端开启8888端口，并监听着，时刻等待着客户端的连接请求 
		2. 客户端知道服务端的ip地址和监听端口号，发出请求到服务端 
		客户端的端口地址是系统分配的，通常都会大于1024 
		一旦建立了连接，服务端会得到一个新的Socket对象，该对象负责与客户端进行通信。 
		注意： 在开发调试的过程中，如果修改过了服务器Server代码，要关闭启动的Server,否则新的Server不能启动，因为8888端口被占用了*/
		
		
		//2 : 收发数字
		/*一旦建立了连接，服务端和客户端就可以通过Socket进行通信了 
		1. 客户端打开输出流，并发送数字 110 
		2. 服务端打开输入流，接受数字 110，并打印*/
		
		// 3 : 收发字符串
		/*直接使用字节流收发字符串比较麻烦，使用数据流对字节流进行封装，这样收发字符串就容易了 
		1. 把输出流封装在DataOutputStream中 
		使用writeUTF发送字符串 "Legendary!" 
		2. 把输入流封装在DataInputStream 
		使用readUTF读取字符串,并打印*/
		
		//4 : 使用Scanner
		/*在上个步骤中，每次要发不同的数据都需要修改代码 
		可以使用Scanner读取控制台的输入，并发送到服务端，这样每次都可以发送不同的数据了。*/
		
		// 5 : 练习-服务端和客户端互聊
		/*前面部分的学习效果是服务端接受数据，客户端发送数据。

		做相应的改动，使得服务端也能发送数据，客户端也能接受数据，并且可以一直持续下去*/
		
		// 7 : 练习-聊天机器人数据库
	}
}
